# import libraries
library(StatDA)
library(chemometrics)
library(car)
library(MASS)
library(gvlma)
library(robustbase)
# import data
completeData = read.csv("SP3.csv",header=TRUE)
setwd("~/NetBeansProjects/1JCH/Data/WorkingDirectory/MVLR/SP3")
completeData = read.csv("SP3.csv",header=TRUE)
summary(SP3.complete)
completeData = read.csv("SP3.csv",header=TRUE)
summary(completeData)
SP3.complete <- subset( completeData, select = -c(1, 2, 3, 4,5,6,8,10,11,13, 17,18 ,20))
summary(SP3.complete)
head(SP3.complete)
SP3.complete <- scale(SP3.complete,center = TRUE, scale = TRUE)
summary(SP3.complete)
SP3.complete.mad = apply(SP3.complete, 2, function(x) {
mad(x, center = median(x), constant = 1.4826,na.rm = FALSE, low = FALSE, high = FALSE)
})
SP3.complete.mad
summary(SP3.complete)
summary(completeData)
exp1JCH<-completeData[,c(17,18,20)]
SP3.complete<-cbind(SP3.complete,exp1JCH)
summary(SP3.complete)
SP3.complete.shuffled <- SP3.complete[sample(nrow(SP3.complete)),]
SP3.complete.testSet<- SP3.complete.shuffled[1:114,]
SP3.complete.trainSet<- SP3.complete.shuffled[115:381,]
summary(SP3.complete.trainSet)
pca<-princomp(SP3.complete.trainSet[,-c(12,13,14)],scores=TRUE, cor=TRUE)
summary(pca)
plot(pca)
biplot(pca)
train.frame <- data.frame(PCA_expValues)
summary(train.frame)
SP3.complete.trainSet[-c(24,60,85),13]
PCA_expValues <- cbind(pca$scores[,1:6], SP3.complete.trainSet[,c(12,13,14)])
train.frame <- data.frame(PCA_expValues)
summary(train.frame)
train_woo.frame <- train.frame
library(DAAG)
library(boot)
model.boot <- glm(formula = V7 ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6, train_woo.frame, family = gaussian)
model.boot <- glm(formula = NWChem ~ Comp.1 + Comp.2 + Comp.3 + Comp.4 + Comp.5 + Comp.6, train_woo.frame, family = gaussian)
summary(model.boot)
plot(model.boot)
model.boot
val.loocv <- cv.glm(data = train_woo.frame, glmfit = model.boot,K = nrow(train_woo.frame))
val.loocv
for (j in 2:10){
ka=0
for (k in 1:100){
ka = ka + cv.glm(data = train_woo.frame, glmfit = model.boot, K = j)$delta[1]
}
k_cv[j]=ka/100
}
k_cv<- vector()
for (j in 2:10){
ka=0
for (k in 1:100){
ka = ka + cv.glm(data = train_woo.frame, glmfit = model.boot, K = j)$delta[1]
}
k_cv[j]=ka/100
}
k_cv
scaled_testSet<-scale(SP3.complete.testSet[,-c(12,13,14)],center = TRUE, scale = TRUE)
pc_new <- as.data.frame(predict(pca,newdata=scaled_testSet))
new.fit <- predict(model.boot, pc_new)
rmse <- function(error)
{
sqrt(mean(error^2))
}
mae <- function(error)
{
mean(abs(error))
}
SP3.complete.testSet[,13]-new.fit
SP3.complete.testSet[,12]-new.fit
mae(SP3.complete.testSet[,12]-new.fit)
rmse(SP3.complete.testSet[,12]-new.fit)
plot(SP3.complete.testSet[,12],new.fit)
hist(model.boot$resid)
skewness(model.boot$resid)
shapiro.test(model.boot$resid)
View(PCA_expValues)
SP3.complete.testSet[,12]-new.fit
View(SP3.complete.testSet)
