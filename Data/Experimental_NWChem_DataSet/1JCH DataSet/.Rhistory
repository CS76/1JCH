summary(model.boot)
model.boot
library(pmml);
library(pmml)
pmml -help
pmml
pmml.glm(model.boot,"c:/a.pmml")
saveXML(pmml.glm(model.boot,"c:/a.pmml"))
saveXML(pmml.glm(model.boot),"c:/a.pmml"))
saveXML(pmml.glm(model.boot),"c:/a.pmml")
saveXML(pmml.boot(model.boot),"c:/a.pmml")
saveXML(pmml.glm(model.boot),"c:/a.pmml")
saveXML(pmml.glm(model.boot),"a.pmml")
View(pc_new)
pca$scores[,1:12]
pca$loadings
load("~/NetBeansProjects/1JCH/data/Experimental_NWChem_DataSet/1JCH DataSet/SP2/.RData")
k_cv
val.loocv
load("~/NetBeansProjects/1JCH/data/Experimental_NWChem_DataSet/1JCH DataSet/SP2/.RData")
View(sp2)
load("C:/Users/CS76/Desktop/dataExtracted/models/MVLR/SP/.RData")
k_cv
load("C:/Users/CS76/Desktop/dataExtracted/models/MVLR/SP2/.RData")
k_cv
load("C:/Users/CS76/Desktop/dataExtracted/models/MVLR/SP3/.RData")
k_cv
val.loocv
k_cv<- vector()
for (j in 2:10){
ka=0
for (k in 1:100){
ka = ka + cv.glm(data = train_woo.frame, glmfit = model.boot, K = j)$delta[1]
}
k_cv[j]=ka/100
}
library(DAAG)
library(boot)
k_cv<- vector()
for (j in 2:10){
ka=0
for (k in 1:100){
ka = ka + cv.glm(data = train_woo.frame, glmfit = model.boot, K = j)$delta[1]
}
k_cv[j]=ka/100
}
k_cv
SP3.complete <- scale(SP3.complete,center = TRUE, scale = TRUE)
k_cv
write.table(scale(pca$x,center = TRUE, scale = TRUE), "C:/Users/CS76/Desktop/SP3_x.csv", sep=",")
load("C:/Users/CS76/Desktop/dataExtracted/models/MVLR/SP3/.RData")
write.table(scale(pca$x,center = TRUE, scale = TRUE), "C:/Users/CS76/Desktop/SP3_x.csv", sep=",")
write.table(pca$x, "C:/Users/CS76/Desktop/SP3_x.csv", sep=",")
write.table(pca$x, "C:/Users/CS76/Desktop/SP3_x.csv", sep=",")
write.table(SP3.complete, "C:/Users/CS76/Desktop/SP3sds.csv", sep=",")
load("C:/Users/CS76/Desktop/dataExtracted/models/MVLR/SP3/.RData")
write.table(scale(pca$rotation,center = TRUE, scale = TRUE), "C:/Users/CS76/Desktop/SP3_x.csv", sep=",")
write.table(scale(pca$rotation,center = TRUE, scale = TRUE), "C:/Users/CS76/Desktop/SP3_x.csv", sep=",")
write.table(pca$rotation, "C:/Users/CS76/Desktop/SP3_x1.csv", sep=",")
load("C:/Users/CS76/Desktop/dataExtracted/models/MVLR/SP2/SP2.RData")
write.table(pca$rotation, "C:/Users/CS76/Desktop/SP2_PCA.csv", sep=",")
summary(model.boot)
load("C:/Users/CS76/Desktop/dataExtracted/models/MVLR/SP/.RData")
model.boot
write.table(pca$rotation, "C:/Users/CS76/Desktop/SP_PCA.csv", sep=",")
install.packages("grid")
setwd("~/NetBeansProjects/1JCH/data/Experimental_NWChem_DataSet/1JCH DataSet")
library(ggplot2)
SP3 = read.csv("SP3.csv",header=TRUE)
summary(SP3)
head(SP3)
# Observed...Predicted
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-5, +5))
ggsave("obs-pred vs obs_SP3.tiff", dpi= 500);
# Observed...Predicted_fit
q1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-5, +5))
ggsave("obs-pred_fit vs obs_SP3.tiff", dpi= 500);
SP2 = read.csv("SP2.csv",header=TRUE)
summary(SP2)
head(SP2)
# Observed...Predicted
p2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-7.5, +5))
ggsave("obs-pred vs obs_SP2.tiff", dpi= 500);
# Observed...Predicted_fit
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-7.5, +5))
ggsave("obs-pred_fit vs obs_SP2.tiff", dpi= 500);
SP1 = read.csv("SP.csv",header=TRUE)
summary(SP1)
head(SP1)
# Observed...Predicted
p3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p3 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-20, +10))
ggsave("obs-pred vs obs_SP1.tiff", dpi= 500);
# Observed...Predicted_fit
q3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q3 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-20, +10))
ggsave("obs-pred_fit vs obs_SP1.tiff", dpi= 500);
multiplot(p1, q1, p2, q2, cols=2)
install.packages("gridExtra")
install.packages("gridBase")
multiplot(p1, p2, p3, p4, cols=2)
library(gridBase)
library(gridExtra)
multiplot(p1, p2, p3, p4, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, p3, p4, cols=2)
multiplot(p1, q1, p2, q2, cols=2)
multiplot(p1, q1, cols=2)
grid.arrange(p1, p2, ncol = 2, main = "Main title")
q1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()+ geom_point()
)+ scale_y_continuous(limit = c(-5, +5))
q1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-5, +5))+ geom_point()
q
multiplot(q1, q1, cols=2)
# Observed...Predicted
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-5, +5))+ geom_point()
ggsave("obs-pred vs obs_SP3.tiff", dpi= 500);
multiplot(p1, p1, cols=2)
SP3 = read.csv("SP3.csv",header=TRUE)
summary(SP3)
head(SP3)
# Observed...Predicted
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-5, +5))+ geom_point()
ggsave("obs-pred vs obs_SP3.tiff", dpi= 500);
# Observed...Predicted_fit
q1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-5, +5))+ geom_point()
ggsave("obs-pred_fit vs obs_SP3.tiff", dpi= 500);
SP2 = read.csv("SP2.csv",header=TRUE)
summary(SP2)
head(SP2)
# Observed...Predicted
p2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-7.5, +5))+ geom_point()
ggsave("obs-pred vs obs_SP2.tiff", dpi= 500);
# Observed...Predicted_fit
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-7.5, +5))+ geom_point()
ggsave("obs-pred_fit vs obs_SP2.tiff", dpi= 500);
SP2 = read.csv("SP2.csv",header=TRUE)
summary(SP2)
head(SP2)
# Observed...Predicted
p2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-7.5, +5))+ geom_point()
ggsave("obs-pred vs obs_SP2.tiff", dpi= 500);
# Observed...Predicted_fit
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank()
)+ scale_y_continuous(limit = c(-7.5, +5))+ geom_point()
SP3 = read.csv("SP3.csv",header=TRUE)
summary(SP3)
head(SP3)
# Observed...Predicted
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-5, +5))+ geom_point()
ggsave("obs-pred vs obs_SP3.tiff", dpi= 500);
# Observed...Predicted_fit
q1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-5, +5))+ geom_point()
ggsave("obs-pred_fit vs obs_SP3.tiff", dpi= 500);
SP2 = read.csv("SP2.csv",header=TRUE)
summary(SP2)
head(SP2)
# Observed...Predicted
p2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-7.5, +5))+ geom_point()
ggsave("obs-pred vs obs_SP2.tiff", dpi= 500);
# Observed...Predicted_fit
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-7.5, +5))+ geom_point()
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-7.5, +5))
)
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-7.5, +5))+ geom_point()
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-8.5, +6))+ geom_point()
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-7.5, +6))+ geom_point()
ggsave("obs-pred_fit vs obs_SP2.tiff", dpi= 500);
SP1 = read.csv("SP.csv",header=TRUE)
summary(SP1)
head(SP1)
# Observed...Predicted
p3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p3 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-20, +10))
ggsave("obs-pred vs obs_SP1.tiff", dpi= 500);
# Observed...Predicted_fit
q3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q3 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-20, +10))
ggsave("obs-pred_fit vs obs_SP1.tiff", dpi= 500);
SP1 = read.csv("SP.csv",header=TRUE)
summary(SP1)
head(SP1)
# Observed...Predicted
p3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p3 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-20, +10)) + geom_point()
ggsave("obs-pred vs obs_SP1.tiff", dpi= 500);
# Observed...Predicted_fit
q3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q3 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-20, +10))+ geom_point()
ggsave("obs-pred_fit vs obs_SP1.tiff", dpi= 500);
SP2 = read.csv("SP2.csv",header=TRUE)
summary(SP2)
head(SP2)
# Observed...Predicted
p2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-7.5, +6))+ geom_point()
ggsave("obs-pred vs obs_SP2.tiff", dpi= 500);
# Observed...Predicted_fit
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
q2 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")
)+ scale_y_continuous(limit = c(-7.5, +6))+ geom_point()
ggsave("obs-pred_fit vs obs_SP2.tiff", dpi= 500);
multiplot(p1, p1, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p1, cols=2)
multiplot(p1, p1, cols=2)
grid.arrange(p1, p2, ncol = 2, main = "Main title")
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
+ theme( axis.line = element_line(),panel.background = element_blank(),axis.title=element_text(face="bold",size="16", color="black"))+
+ scale_y_continuous(limit = c(-5, +5))+ geom_point()
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")
+ theme( axis.line = element_line(),panel.background = element_blank(),axis.title=element_text(face="bold",size="16", color="black"))
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+ theme(
axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-5, +5))+
geom_point()
grid.arrange(p1, p1, ncol = 2, main = "Main title")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-5, +5))+
geom_point()
grid.arrange(p1, p1, ncol = 2, main = "Main title")
p1 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick)) +
geom_line() +
ggtitle("Growth curve for individual chicks")
grid.arrange(p1, p1, ncol = 2, main = "Main title")
grid.arrange(p1, p1,p1,p1, ncol = 2, main = "Main title")
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
+ geom_point(shape=3,size=5)+scale_size(guide="none")
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
+ geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")) +
scale_y_continuous(limit = c(-5, +5)) +
geom_point()
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)")
p1 + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")) +
scale_y_continuous(limit = c(-5, +5)) +
geom_point()
ggsave("obs-pred vs obs_SP3.tiff", dpi= 500);
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")) +
scale_y_continuous(limit = c(-5, +5)) +
geom_point()
grid.arrange(p1, p1,p1,p1, ncol = 2, main = "Main title")
a <- grid.arrange(p1, p1,p1,p1, ncol = 2, main = "Main title")
i= 50
ggsave("new", dpi= 500);
a <- grid.arrange(p1, p1,p1,p1, ncol = 2, main = "Main title")
ggsave("new", dpi= 500);
a <- grid.arrange(p1, p1,p1,p1, ncol = 2, main = "Main title")
ggsave("new.tiff", dpi= 500);
q1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-5, +5))+
geom_point()
ggsave("obs-pred_fit vs obs_SP3.tiff", dpi= 500);
a <- grid.arrange(p1, q1,p1,p1, ncol = 2, main = "Main title")
p2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-7.5, +6))+
geom_point()
ggsave("obs-pred vs obs_SP2.tiff", dpi= 500);
q2 <- ggplot(SP2, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-7.5, +6))+
geom_point()
ggsave("obs-pred_fit vs obs_SP2.tiff", dpi= 500);
SP1 = read.csv("SP.csv",header=TRUE)
summary(SP1)
head(SP1)
p3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-20, +10)) +
geom_point()
ggsave("obs-pred vs obs_SP1.tiff", dpi= 500);
q3 <- ggplot(SP1, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-20, +10))+
geom_point()
ggsave("obs-pred_fit vs obs_SP1.tiff", dpi= 500);
a <- grid.arrange(p1, q1,p2,q2,p3,q3, ncol = 2, main = "Main title")
a <- grid.arrange(p1, q1,p2,q2,p3,q3, ncol = 2)
grid.arrange(p1,q1,p2,q2,p3,q3, ncol = 2)
ggsave(file = "efecto.png", dpi = 500)
final <- grid.arrange(p1,q1,p2,q2,p3,q3, ncol = 2)
ggsave(file = "efecto.png",plot=final, dpi = 500)
f <- grid.arrange(p1,q1,p2,q2,p3,q3, ncol = 2)
ggsave(file = "efecto.png",plot=f, dpi = 500)
png(file = "modelo1.png", width = 480, height = 800)
grid.arrange(p1,q1,p2,q2,p3,q3, ncol = 2)
dev.off()
png(file = "modelo1.png", width = 2272, height = 2392)
grid.arrange(p1,q1,p2,q2,p3,q3, ncol = 2)
dev.off()
p1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black")) +
scale_y_continuous(limit = c(-5, +5)) +
geom_point()
ggsave("obs-pred vs obs_SP3.tiff", dpi= 500);
# Observed...Predicted_fit
q1 <- ggplot(SP3, aes(x=Experimental_1JCH, y=Observed...Predicted_fit))+ xlab("Observed (Hz)") + ylab("Observed - Predicted (Hz)") + geom_point(shape=3,size=5)+scale_size(guide="none") +theme(legend.position = "none")+
theme(axis.line = element_line(),
panel.background = element_blank(),
axis.title=element_text(face="bold",size="16", color="black"))+
scale_y_continuous(limit = c(-5, +5))+
geom_point()
ggsave("obs-pred_fit vs obs_SP3.tiff", dpi= 500);
